const puppeteer = require("puppeteer");

const urlGeneric = "https://www.ouedkniss.com/automobiles/";
const pageStop = 1;

const scrapeUntilEnd = async (page) => {
  try {
    let previousHeight = -1;
    let pageHeight = await page.evaluate("document.body.scrollHeight");
    // eslint-disable-next-line no-constant-condition
    while (true) {
      let newHeight = previousHeight + 1;
      await page.evaluate(`window.scrollTo(0, ${newHeight})`);
      if (newHeight >= pageHeight) {
        break;
      }
      previousHeight = newHeight;
    }
  } catch (error) {
    console.error("Error while scrolling:", error);
  }
};

async function scrape(browser) {
  try {
    const allArticles = [];
    for (let i = 1; i <= pageStop; i++) {
      const url = urlGeneric + i;
      const page = await browser.newPage();
      // Set the viewport to a specific size
      await page.setViewport({ width: 1280, height: 800 });
      await page.goto(url, { waitUntil: "networkidle0", timeout: 0 });

      await scrapeUntilEnd(page);

      await page.waitForSelector("div.col-sm-6.col-md-4.col-lg-3.col-12");
      allArticles[i - 1] = await page.evaluate(() => {
        const articles = document.querySelectorAll(
          "div.col-sm-6.col-md-4.col-lg-3.col-12",
        );
        return Array.from(articles).map((article) => {
          const anchor = article.querySelector("a");
          const price = article.querySelector(".price")?.innerText.trim();
          const url = anchor ? anchor.href : null;
          return {
            url,
            price,
          };
        });
      });
      await page.close();
    }

    return allArticles;
  } catch (error) {
    console.error("Error during scraping:", error);
  }
}
async function scrapeUrls(allArticles, browser) {
  for (const articles of allArticles) {
    for (const article of articles) {
      if (article.url) {
        await scrapeArticle(article.url, browser, article.price);
        //FIX: this only scrapes the first article for testing purposes
        //remove the return statement to scrape all articles
        return;
      }
    }
  }
}

async function scrapeArticle(url, browser, price) {
  const page = await browser.newPage();
  await page.setViewport({ width: 1280, height: 800 });
  await page.goto(url, { waitUntil: "networkidle2", timeout: 0 });
  await page.waitForSelector(
    "div.o-announ-specs.mt-2.elevation-1.v-card.v-sheet",
  );
  const data = await page.evaluate(() => {
    const data = document.querySelectorAll("div.col-sm-9.col-7");
    const date = data[1].innerText;
    //TODO:maybe there is a field here view maybe not so we need to check
    const papiers = data[2].innerText;
    const couleur = data[3].innerText;
    const boite = data[4].innerText;
    const energie = data[5].innerText;
    const moteur = data[6].innerText;
    const finition = data[7].innerText;
    const modele = data[8].innerText;
    const marque = data[9].innerText;
    const kilometrage = data[10].innerText;
    const annee = data[11].innerText;
    let options = document.querySelectorAll("span.v-chip__content");
    // Assuming options is an array containing strings
    options = Array.from(options).map((option) => option.innerText);

    // Remove the options with .com, *gmail*, *hotmail*, *announce*, *abonnés* in them
    options = options.filter((option) => {
      return !(
        option.includes(".com") ||
        option.includes("gmail") ||
        option.includes("hotmail") ||
        option.includes("annonces") ||
        option.includes("abonnés")
      );
    });
    return {
      date,
      papiers,
      couleur,
      boite,
      energie,
      moteur,
      finition,
      modele,
      marque,
      kilometrage,
      annee,
      options,
    };
  });
  data.price = price;
  console.log(data);
  await page.close();
  return data;
}

const main = async () => {
  const browser = await puppeteer.launch({
    headless: false,
  });
  // const Articles = await scrape(browser);
  // const data = await scrapeUrls(Articles, browser);
  await scrapeArticle(
    "https://www.ouedkniss.com/berline-mercedes-classe-c-2022-220-amg-line-draa-ben-khedda-tizi-ouzou-algerie-d40031580",
    browser,
    "1 000 000 DA",
  );
  await browser.close();
};
main();
